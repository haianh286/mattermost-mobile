---
name: build-release

on:
  push:
    branches:
      # TODO: remove the `gha-` to match the current workflow again
      - "build-gha-release-*"
      - "build-gha-ios-release-*"
      - "build-gha-android-release-*"

env:
  NODE_VERSION: 18.7.0
  TERM: xterm

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: ci/test
        uses: ./.github/actions/test

  build-and-deploy-ios-release:
    runs-on: macos-12
    if: ${{ !startsWith(github.ref_name, 'build-android') }}
    needs:
      - test
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: ci/prepare-ios-build
        uses: ./.github/actios/prepare-ios-build

      - name: ci/build-and-deploy-ios-release
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MM_MOBILE_RELEASE_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MM_MOBILE_RELEASE_AWS_SECRET_ACCESS_KEY }}"
          MATTERMOST_WEBHOOK_URL: "${{ secrets.MM_MOBILE_RELEASE_MATTERMOST_WEBHOOK_URL }}"
          FASTLANE_TEAM_ID: "${{ secrets.MM_MOBILE_FASTLANE_TEAM_ID }}"
          IOS_API_ISSUER_ID: "${{ secrets.MM_MOBILE_IOS_API_ISSUER_ID }}"
          IOS_API_KEY: "${{ secrets.MM_MOBILE_IOS_API_KEY }}"
          IOS_API_KEY_ID: "${{ secrets.MM_MOBILE_IOS_API_KEY_ID }}"
          MATCH_GIT_URL: "${{ secrets.MM_MOBILE_MATCH_GIT_URL }}"
          MATCH_PASSWORD: "${{ secrets.MM_MOBILE_MATCH_PASSWORD }}"
          SENTRY_AUTH_TOKEN: "${{ secrets.MM_MOBILE_SENTRY_AUTH_TOKEN }}"
          SENTRY_DSN_IOS: ${{ secrets.MM_MOBILE_RELEASE_SENTRY_DSN_IOS }}
        run: |
          echo "::group::Build"
          bundle exec fastlane ios build --env ios.release
          echo "::endgroup::"
          echo "::group::Deploy to TestFlight"
          bundle exec fastlane ios deploy file:"${{ github.workspace }}/*.ipa" --env ios.release
          echo "::endgroup::"
        working-directory: ./fastlane

      - name: ci/upload-ios-release-build
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ios-build-release-${{ github.run_id }}
          path: "*.ipa"

  build-and-deploy-android-release:
    runs-on: ubuntu-22.04
    if: ${{ !startsWith(github.ref_name, 'build-ios') }}
    needs:
      - test
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: ci/prepare-android-build
        uses: ./.github/actios/prepare-android-build
        with:
          sign: true

      - name: ci/build-and-deploy-android-release
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MM_MOBILE_RELEASE_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MM_MOBILE_RELEASE_AWS_SECRET_ACCESS_KEY }}"
          MATTERMOST_WEBHOOK_URL: "${{ secrets.MM_MOBILE_RELEASE_MATTERMOST_WEBHOOK_URL }}"
          SENTRY_AUTH_TOKEN: "${{ secrets.MM_MOBILE_SENTRY_AUTH_TOKEN }}"
          SENTRY_DSN_ANDROID: ${{ secrets.MM_MOBILE_RELEASE_SENTRY_DSN_ANDROID }}
          SUPPLY_JSON_KEY: ${{ github.workspace }}/mattermost-mobile-private/android/mattermost-credentials.json
        run: |
          echo "::group::Build"
          bundle exec fastlane android build --env android.release
          echo "::endgroup::"
          echo "::group::Deploy to Play Store"
          bundle exec fastlane android deploy file:"${{ github.workspace }}/*.apk" --env android.release
          echo "::endgroup::"
        working-directory: ./fastlane

      - name: ci/upload-android-release-build
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: android-build-release-${{ github.run_id }}
          path: "*.apk"
