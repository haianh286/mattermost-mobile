// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostOptions should match snapshot, no option for system message to user who doesn't have the permission to delete 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="post.options"
>
  <Connect(SlideUpPanel)
    allowStayMiddle={false}
    initialPosition={372}
    marginFromTop={228}
    onRequestClose={[Function]}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  >
    <Connect(ReactionPicker)
      addReaction={[Function]}
      openReactionScreen={[Function]}
      testID="post_options.reaction_picker.action"
    />
    <PostOption
      destructive={false}
      icon="reply-outline"
      onPress={[Function]}
      testID="post.options.reply.action"
      text="Reply"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      icon="mark-as-unread"
      onPress={[Function]}
      testID="post.options.markUnread.action"
      text="Mark as Unread"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={false}
      icon="pin-outline"
      onPress={[Function]}
      testID="post.options.pin.action"
      text="Pin to Channel"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={false}
      icon="pencil-outline"
      onPress={[Function]}
      testID="post.options.edit.action"
      text="Edit"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <Connect(InjectIntl(Component))
      closeWithAnimation={[Function]}
      post={
        Object {
          "channel_id": "channel_id",
          "id": "post_id",
          "is_pinned": false,
          "message": "message",
          "root_id": "root_id",
        }
      }
    />
  </Connect(SlideUpPanel)>
</View>
`;

exports[`PostOptions should match snapshot, showing Delete option only for system message to user who has permission to delete 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="post.options"
>
  <Connect(SlideUpPanel)
    allowStayMiddle={false}
    initialPosition={422}
    marginFromTop={178}
    onRequestClose={[Function]}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  >
    <Connect(ReactionPicker)
      addReaction={[Function]}
      openReactionScreen={[Function]}
      testID="post_options.reaction_picker.action"
    />
    <PostOption
      destructive={false}
      icon="reply-outline"
      onPress={[Function]}
      testID="post.options.reply.action"
      text="Reply"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      icon="mark-as-unread"
      onPress={[Function]}
      testID="post.options.markUnread.action"
      text="Mark as Unread"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={false}
      icon="pin-outline"
      onPress={[Function]}
      testID="post.options.pin.action"
      text="Pin to Channel"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={false}
      icon="pencil-outline"
      onPress={[Function]}
      testID="post.options.edit.action"
      text="Edit"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={true}
      icon="trash-can-outline"
      onPress={[Function]}
      testID="post.options.delete.action"
      text="Delete"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <Connect(InjectIntl(Component))
      closeWithAnimation={[Function]}
      post={
        Object {
          "channel_id": "channel_id",
          "id": "post_id",
          "is_pinned": false,
          "message": "message",
          "root_id": "root_id",
        }
      }
    />
  </Connect(SlideUpPanel)>
</View>
`;

exports[`PostOptions should match snapshot, showing all possible options 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="post.options"
>
  <Connect(SlideUpPanel)
    allowStayMiddle={false}
    initialPosition={422}
    marginFromTop={178}
    onRequestClose={[Function]}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  >
    <Connect(ReactionPicker)
      addReaction={[Function]}
      openReactionScreen={[Function]}
      testID="post_options.reaction_picker.action"
    />
    <PostOption
      destructive={false}
      icon="reply-outline"
      onPress={[Function]}
      testID="post.options.reply.action"
      text="Reply"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      icon="mark-as-unread"
      onPress={[Function]}
      testID="post.options.markUnread.action"
      text="Mark as Unread"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={false}
      icon="pin-outline"
      onPress={[Function]}
      testID="post.options.pin.action"
      text="Pin to Channel"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={false}
      icon="pencil-outline"
      onPress={[Function]}
      testID="post.options.edit.action"
      text="Edit"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <PostOption
      destructive={true}
      icon="trash-can-outline"
      onPress={[Function]}
      testID="post.options.delete.action"
      text="Delete"
      theme={
        Object {
          "awayIndicator": "#ffbc42",
          "buttonBg": "#166de0",
          "buttonColor": "#ffffff",
          "centerChannelBg": "#ffffff",
          "centerChannelColor": "#3d3c40",
          "codeTheme": "github",
          "colorScheme": "light",
          "dndIndicator": "#f74343",
          "errorTextColor": "#fd5960",
          "linkColor": "#2389d7",
          "mentionBg": "#ffffff",
          "mentionBj": "#ffffff",
          "mentionColor": "#145dbf",
          "mentionHighlightBg": "#ffe577",
          "mentionHighlightLink": "#166de0",
          "newMessageSeparator": "#ff8800",
          "onlineIndicator": "#06d6a0",
          "sidebarBg": "#145dbf",
          "sidebarHeaderBg": "#1153ab",
          "sidebarHeaderTextColor": "#ffffff",
          "sidebarText": "#ffffff",
          "sidebarTextActiveBorder": "#579eff",
          "sidebarTextActiveColor": "#ffffff",
          "sidebarTextHoverBg": "#4578bf",
          "sidebarUnreadText": "#ffffff",
          "type": "Mattermost",
        }
      }
    />
    <Connect(InjectIntl(Component))
      closeWithAnimation={[Function]}
      post={
        Object {
          "channel_id": "channel_id",
          "id": "post_id",
          "is_pinned": false,
          "message": "message",
          "root_id": "root_id",
        }
      }
    />
  </Connect(SlideUpPanel)>
</View>
`;
