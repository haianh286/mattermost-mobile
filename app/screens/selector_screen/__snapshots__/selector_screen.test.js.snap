// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectorScreen should match snapshot for channels 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(StatusBar) />
  <View
    style={
      Object {
        "height": 38,
        "marginVertical": 5,
        "paddingLeft": 8,
      }
    }
    testID="selector.screen"
  >
    <Search
      autoCapitalize="none"
      backArrowSize={24}
      backgroundColor="transparent"
      blurOnSubmit={false}
      cancelTitle="Cancel"
      containerHeight={40}
      deleteIconSize={20}
      editable={true}
      inputHeight={33}
      inputStyle={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "color": "#3d3c40",
          "fontSize": 15,
        }
      }
      keyboardAppearance="light"
      keyboardShouldPersist={false}
      keyboardType="default"
      onBlur={[Function]}
      onCancelButtonPress={[Function]}
      onChangeText={[Function]}
      onSearchButtonPress={[Function]}
      onSelectionChange={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(61,60,64,0.5)"
      returnKeyType="search"
      searchBarRightMargin={0}
      searchIconSize={24}
      showArrow={false}
      showCancel={true}
      testID="selector.search_bar"
      tintColorDelete="rgba(61,60,64,0.5)"
      tintColorSearch="rgba(61,60,64,0.5)"
      titleCancelColor="#3d3c40"
      value=""
    />
  </View>
  <CustomList
    canRefresh={true}
    data={Array []}
    listType="flat"
    loading={false}
    loadingComponent={null}
    noResults={null}
    onLoadMore={[Function]}
    onRowPress={[Function]}
    renderItem={[Function]}
    shouldRenderSeparator={true}
    showNoResults={true}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  />
</RNCSafeAreaView>
`;

exports[`SelectorScreen should match snapshot for channels 2`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(StatusBar) />
  <View
    style={
      Object {
        "height": 38,
        "marginVertical": 5,
        "paddingLeft": 8,
      }
    }
    testID="selector.screen"
  >
    <Search
      autoCapitalize="none"
      backArrowSize={24}
      backgroundColor="transparent"
      blurOnSubmit={false}
      cancelTitle="Cancel"
      containerHeight={40}
      deleteIconSize={20}
      editable={true}
      inputHeight={33}
      inputStyle={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "color": "#3d3c40",
          "fontSize": 15,
        }
      }
      keyboardAppearance="light"
      keyboardShouldPersist={false}
      keyboardType="default"
      onBlur={[Function]}
      onCancelButtonPress={[Function]}
      onChangeText={[Function]}
      onSearchButtonPress={[Function]}
      onSelectionChange={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(61,60,64,0.5)"
      returnKeyType="search"
      searchBarRightMargin={0}
      searchIconSize={24}
      showArrow={false}
      showCancel={true}
      testID="selector.search_bar"
      tintColorDelete="rgba(61,60,64,0.5)"
      tintColorSearch="rgba(61,60,64,0.5)"
      titleCancelColor="#3d3c40"
      value=""
    />
  </View>
  <CustomList
    canRefresh={true}
    data={Array []}
    listType="flat"
    loading={false}
    loadingComponent={null}
    noResults={null}
    onLoadMore={[Function]}
    onRowPress={[Function]}
    renderItem={[Function]}
    shouldRenderSeparator={true}
    showNoResults={true}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  />
</RNCSafeAreaView>
`;

exports[`SelectorScreen should match snapshot for explicit options 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(StatusBar) />
  <View
    style={
      Object {
        "height": 38,
        "marginVertical": 5,
        "paddingLeft": 8,
      }
    }
    testID="selector.screen"
  >
    <Search
      autoCapitalize="none"
      backArrowSize={24}
      backgroundColor="transparent"
      blurOnSubmit={false}
      cancelTitle="Cancel"
      containerHeight={40}
      deleteIconSize={20}
      editable={true}
      inputHeight={33}
      inputStyle={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "color": "#3d3c40",
          "fontSize": 15,
        }
      }
      keyboardAppearance="light"
      keyboardShouldPersist={false}
      keyboardType="default"
      onBlur={[Function]}
      onCancelButtonPress={[Function]}
      onChangeText={[Function]}
      onSearchButtonPress={[Function]}
      onSelectionChange={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(61,60,64,0.5)"
      returnKeyType="search"
      searchBarRightMargin={0}
      searchIconSize={24}
      showArrow={false}
      showCancel={true}
      testID="selector.search_bar"
      tintColorDelete="rgba(61,60,64,0.5)"
      tintColorSearch="rgba(61,60,64,0.5)"
      titleCancelColor="#3d3c40"
      value=""
    />
  </View>
  <CustomList
    canRefresh={true}
    data={
      Array [
        Object {
          "text": "text",
          "value": "value",
        },
      ]
    }
    listType="flat"
    loading={false}
    loadingComponent={null}
    noResults={null}
    onLoadMore={[Function]}
    onRowPress={[Function]}
    renderItem={[Function]}
    shouldRenderSeparator={true}
    showNoResults={true}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  />
</RNCSafeAreaView>
`;

exports[`SelectorScreen should match snapshot for searching 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(StatusBar) />
  <View
    style={
      Object {
        "height": 38,
        "marginVertical": 5,
        "paddingLeft": 8,
      }
    }
    testID="selector.screen"
  >
    <Search
      autoCapitalize="none"
      backArrowSize={24}
      backgroundColor="transparent"
      blurOnSubmit={false}
      cancelTitle="Cancel"
      containerHeight={40}
      deleteIconSize={20}
      editable={true}
      inputHeight={33}
      inputStyle={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "color": "#3d3c40",
          "fontSize": 15,
        }
      }
      keyboardAppearance="light"
      keyboardShouldPersist={false}
      keyboardType="default"
      onBlur={[Function]}
      onCancelButtonPress={[Function]}
      onChangeText={[Function]}
      onSearchButtonPress={[Function]}
      onSelectionChange={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(61,60,64,0.5)"
      returnKeyType="search"
      searchBarRightMargin={0}
      searchIconSize={24}
      showArrow={false}
      showCancel={true}
      testID="selector.search_bar"
      tintColorDelete="rgba(61,60,64,0.5)"
      tintColorSearch="rgba(61,60,64,0.5)"
      titleCancelColor="#3d3c40"
      value="name2"
    />
  </View>
  <CustomList
    canRefresh={true}
    data={Array []}
    listType="flat"
    loading={false}
    loadingComponent={null}
    noResults={null}
    onLoadMore={[Function]}
    onRowPress={[Function]}
    renderItem={[Function]}
    shouldRenderSeparator={true}
    showNoResults={true}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  />
</RNCSafeAreaView>
`;

exports[`SelectorScreen should match snapshot for users 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(StatusBar) />
  <View
    style={
      Object {
        "height": 38,
        "marginVertical": 5,
        "paddingLeft": 8,
      }
    }
    testID="selector.screen"
  >
    <Search
      autoCapitalize="none"
      backArrowSize={24}
      backgroundColor="transparent"
      blurOnSubmit={false}
      cancelTitle="Cancel"
      containerHeight={40}
      deleteIconSize={20}
      editable={true}
      inputHeight={33}
      inputStyle={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "color": "#3d3c40",
          "fontSize": 15,
        }
      }
      keyboardAppearance="light"
      keyboardShouldPersist={false}
      keyboardType="default"
      onBlur={[Function]}
      onCancelButtonPress={[Function]}
      onChangeText={[Function]}
      onSearchButtonPress={[Function]}
      onSelectionChange={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(61,60,64,0.5)"
      returnKeyType="search"
      searchBarRightMargin={0}
      searchIconSize={24}
      showArrow={false}
      showCancel={true}
      testID="selector.search_bar"
      tintColorDelete="rgba(61,60,64,0.5)"
      tintColorSearch="rgba(61,60,64,0.5)"
      titleCancelColor="#3d3c40"
      value=""
    />
  </View>
  <CustomList
    canRefresh={true}
    data={Array []}
    listType="section"
    loading={false}
    loadingComponent={null}
    noResults={null}
    onLoadMore={[Function]}
    onRowPress={[Function]}
    renderItem={[Function]}
    shouldRenderSeparator={true}
    showNoResults={true}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  />
</RNCSafeAreaView>
`;

exports[`SelectorScreen should match snapshot for users 2`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(StatusBar) />
  <View
    style={
      Object {
        "height": 38,
        "marginVertical": 5,
        "paddingLeft": 8,
      }
    }
    testID="selector.screen"
  >
    <Search
      autoCapitalize="none"
      backArrowSize={24}
      backgroundColor="transparent"
      blurOnSubmit={false}
      cancelTitle="Cancel"
      containerHeight={40}
      deleteIconSize={20}
      editable={true}
      inputHeight={33}
      inputStyle={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "color": "#3d3c40",
          "fontSize": 15,
        }
      }
      keyboardAppearance="light"
      keyboardShouldPersist={false}
      keyboardType="default"
      onBlur={[Function]}
      onCancelButtonPress={[Function]}
      onChangeText={[Function]}
      onSearchButtonPress={[Function]}
      onSelectionChange={[Function]}
      placeholder="Search"
      placeholderTextColor="rgba(61,60,64,0.5)"
      returnKeyType="search"
      searchBarRightMargin={0}
      searchIconSize={24}
      showArrow={false}
      showCancel={true}
      testID="selector.search_bar"
      tintColorDelete="rgba(61,60,64,0.5)"
      tintColorSearch="rgba(61,60,64,0.5)"
      titleCancelColor="#3d3c40"
      value=""
    />
  </View>
  <CustomList
    canRefresh={true}
    data={Array []}
    listType="section"
    loading={false}
    loadingComponent={null}
    noResults={null}
    onLoadMore={[Function]}
    onRowPress={[Function]}
    renderItem={[Function]}
    shouldRenderSeparator={true}
    showNoResults={true}
    theme={
      Object {
        "awayIndicator": "#ffbc42",
        "buttonBg": "#166de0",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3d3c40",
        "codeTheme": "github",
        "colorScheme": "light",
        "dndIndicator": "#f74343",
        "errorTextColor": "#fd5960",
        "linkColor": "#2389d7",
        "mentionBg": "#ffffff",
        "mentionBj": "#ffffff",
        "mentionColor": "#145dbf",
        "mentionHighlightBg": "#ffe577",
        "mentionHighlightLink": "#166de0",
        "newMessageSeparator": "#ff8800",
        "onlineIndicator": "#06d6a0",
        "sidebarBg": "#145dbf",
        "sidebarHeaderBg": "#1153ab",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#579eff",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#4578bf",
        "sidebarUnreadText": "#ffffff",
        "type": "Mattermost",
      }
    }
  />
</RNCSafeAreaView>
`;
