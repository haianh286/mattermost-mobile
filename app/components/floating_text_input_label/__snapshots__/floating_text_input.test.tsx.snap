// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FloatingTextInput test snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "width": "100%",
      },
      undefined,
    ]
  }
  testID="text_input.container"
>
  <Text
    animatedStyle={
      Object {
        "value": Object {
          "backgroundColor": "#ffffff",
          "color": "rgba(63,67,80,0.64)",
          "fontSize": 10,
          "paddingHorizontal": 4,
          "top": -6.5,
        },
      }
    }
    collapsable={false}
    numberOfLines={1}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "color": "rgba(63,67,80,0.64)",
        "fontFamily": "OpenSans",
        "fontSize": 10,
        "left": 16,
        "marginTop": 15,
        "maxWidth": 315,
        "paddingHorizontal": 4,
        "position": "absolute",
        "top": -6.5,
        "zIndex": 10,
      }
    }
    suppressHighlighting={true}
  >
    input label
  </Text>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderColor": "rgba(63,67,80,0.16)",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        undefined,
        Object {
          "height": 48,
        },
        Object {
          "borderWidth": 2,
        },
      ]
    }
    testID="text_input.input_container"
  >
    <TextInput
      editable={true}
      multiline={false}
      onBlur={[Function]}
      onChange={[MockFunction]}
      onFocus={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="rgba(63,67,80,0.64)"
      pointerEvents="auto"
      style={
        Array [
          Object {
            "color": "#3f4350",
            "flex": 1,
            "fontFamily": "OpenSans",
            "fontSize": 16,
            "lineHeight": 24,
            "padding": 0,
          },
          undefined,
          Object {
            "height": 24,
          },
        ]
      }
      testID="text_input"
      underlineColorAndroid="transparent"
      value="initial value"
    />
  </View>
</View>
`;
