// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Global Thread List Should render threads with functional tabs & mark all as read button 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <InjectIntl(ThreadListHeader)
    haveUnreads={true}
    markAllAsRead={[MockFunction]}
    style={
      {
        "borderBottom": {
          "borderBottomColor": "rgba(63,67,80,0.08)",
          "borderBottomWidth": 1,
        },
        "container": {
          "flex": 1,
        },
        "headerContainer": {
          "alignItems": "center",
          "flexDirection": "row",
        },
        "listScrollIndicator": {
          "right": 1,
        },
        "loadingMoreContainer": {
          "paddingVertical": 12,
        },
        "markAllReadIcon": {
          "color": "rgba(63,67,80,0.56)",
          "fontSize": 28,
          "lineHeight": 28,
        },
        "markAllReadIconContainer": {
          "paddingHorizontal": 20,
        },
        "markAllReadIconDisabled": {
          "opacity": 0.5,
        },
        "menuContainer": {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 1,
          "marginVertical": 12,
          "paddingLeft": 12,
        },
        "menuItem": {
          "alignSelf": "center",
          "color": "rgba(63,67,80,0.56)",
          "fontFamily": "Open Sans",
          "fontSize": 16,
          "fontWeight": "600",
          "lineHeight": 24,
        },
        "menuItemContainer": {
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        "menuItemContainerSelected": {
          "backgroundColor": "rgba(28,88,217,0.08)",
          "borderRadius": 4,
        },
        "menuItemSelected": {
          "color": "#1c58d9",
        },
        "messagesContainer": {
          "flexGrow": 1,
        },
        "unreadsDot": {
          "backgroundColor": "#5d89ea",
          "borderRadius": 3,
          "height": 6,
          "position": "absolute",
          "right": -6,
          "top": 4,
          "width": 6,
        },
      }
    }
    testId="thread_list"
    viewAllThreads={[MockFunction]}
    viewUnreadThreads={[MockFunction]}
    viewingUnreads={true}
  />
  <PostListRefreshControl
    enabled={true}
    isInverted={false}
    onRefresh={[MockFunction]}
    refreshing={false}
    theme={
      {
        "awayIndicator": "#ffbc1f",
        "buttonBg": "#1c58d9",
        "buttonColor": "#ffffff",
        "centerChannelBg": "#ffffff",
        "centerChannelColor": "#3f4350",
        "codeTheme": "github",
        "dndIndicator": "#d24b4e",
        "errorTextColor": "#d24b4e",
        "linkColor": "#386fe5",
        "mentionBg": "#ffffff",
        "mentionColor": "#1e325c",
        "mentionHighlightBg": "#ffd470",
        "mentionHighlightLink": "#1b1d22",
        "newMessageSeparator": "#cc8f00",
        "onlineIndicator": "#3db887",
        "sidebarBg": "#1e325c",
        "sidebarHeaderBg": "#192a4d",
        "sidebarHeaderTextColor": "#ffffff",
        "sidebarTeamBarBg": "#14213e",
        "sidebarText": "#ffffff",
        "sidebarTextActiveBorder": "#5d89ea",
        "sidebarTextActiveColor": "#ffffff",
        "sidebarTextHoverBg": "#28427b",
        "sidebarUnreadText": "#ffffff",
        "type": "Denim",
      }
    }
  >
    <FlatList
      ListEmptyComponent={
        <EmptyState
          intl={
            {
              "defaultFormats": {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": {},
              "formatters": {
                "getDateTimeFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralFormat": [Function],
                "getRelativeFormat": [Function],
              },
              "locale": "en",
              "messages": {},
              "now": [Function],
              "onError": [Function],
              "textComponent": "span",
              "timeZone": null,
            }
          }
          isUnreads={true}
        />
      }
      ListFooterComponent={null}
      contentContainerStyle={
        {
          "flexGrow": 1,
        }
      }
      data={
        [
          "thread1",
        ]
      }
      initialNumToRender={10}
      keyExtractor={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={2}
      onScroll={[Function]}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
    />
  </PostListRefreshControl>
</View>
`;
